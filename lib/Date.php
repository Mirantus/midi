<?php/** * Date class * * @author Mikhail Miropolskiy <the-ms@ya.ru> * @package Lib * @copyright (c) 2012. Mikhail Miropolskiy. All Rights Reserved. */namespace lib;class Date {	/**	 * @return int Time in milliseconds	 */	public static function microtime() {		$mtime = explode(' ', microtime());		return $mtime[1] + $mtime[0];	}	/**	 * @param string $date Date in format '2012-11-12'	 * @return string Date in format '12 ноября 2012'	 */	public static function sqlToText($date) {		if ($date == '0000-00-00' || empty($date)) return '';		if (!preg_match('/\d{4}-\d{2}-\d{2}/', $date)) return $date;		$month = self::getMonthByNumber(date('n', strtotime($date)));		$day = date('j', strtotime($date));		$year = date('Y', strtotime($date));		return $day . ' ' . $month . ' ' . $year;	}	/**	 * @param string $date Date in format '12.11.2012'	 * @return string Date in format '2012-11-12'	 */	public static function dateToSql($date) {		if (!preg_match('/\d{1,2}\.\d{1,2}\.\d{1,4}/', $date)) return '0000-00-00';		return date('Y-m-d', strtotime($date));	}	/**	 * @param string $date Date in format '2012-11-12'	 * @return string Date in format '12.11.2012'	 */	public static function sqlToDate($date) {		if ($date == '0000-00-00' || $date == '') return '';		return date('j.m.Y', strtotime($date));	}	/**	 * @param int $number Month number	 * @return string Month name	 */	public static function getMonthByNumber($number) {		switch (intval($number)) {			case 1: $month = 'января'; break;			case 2: $month = 'февраля'; break;			case 3: $month = 'марта'; break;			case 4: $month = 'апреля'; break;			case 5: $month = 'мая'; break;			case 6: $month = 'июня'; break;			case 7: $month = 'июля'; break;			case 8: $month = 'августа'; break;			case 9: $month = 'сентября'; break;			case 10: $month = 'октября'; break;			case 11: $month = 'ноября'; break;			case 12: $month = 'декабря'; break;			default: $month = '';		}				return $month;	}}